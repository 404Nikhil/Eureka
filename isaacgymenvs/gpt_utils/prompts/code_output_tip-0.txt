The reward function should generate two items as its output:
    (1) the total reward, 
    (2) a dictionary containing each individual reward component.

The output of the code should be formatted as a Python code string: "```python ... ```".

Here are some useful tips for writing the reward function code:
    (1) You may find it beneficial to normalize the reward by applying transformations such as torch.exp to the overall reward or its components.
    (2) If you decide to transform a reward component, remember to include a temperature parameter within the transformation function. This parameter must be a named variable within the reward function and should not be an input variable. Each transformed reward component should have its own temperature variable.
    (3) Ensure that the correct type is specified for each input variable. For example, a float input variable should not be specified as torch.Tensor.
    (4) Most importantly, the reward code should only use attributes of the provided environment class definition as input variables. It is not allowed to introduce new input variables under any circumstances.